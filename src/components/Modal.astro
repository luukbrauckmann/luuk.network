---
import type { HTMLAttributes } from "astro/types";
import { Button } from "@components";

type Props = HTMLAttributes<"dialog">;

const { class: className, ...props } = Astro.props;
---

<enhanced-dialog>
  <slot name="trigger" />

  <dialog class:list={["modal", className]} {...props}>
    <header class="modal__header">
      <slot name="header" />

      <form method="dialog">
        <Button icon="xmark" iconOnly variant="transparent">Close</Button>
      </form>
    </header>

    <div class="modal__body">
      <slot />
    </div>
  </dialog>
</enhanced-dialog>

<script>
  class EnhancedDialog extends HTMLElement {
    dialog: HTMLDialogElement | null = null;
    trigger: HTMLButtonElement | null = null;

    constructor() {
      super();
    }

    connectedCallback() {
      this.dialog = this.querySelector("dialog");
      this.trigger = this.querySelector(`button`);

      this.trigger?.addEventListener("click", () => {
        this.dialog?.showModal();
      });
    }

    disconnectedCallback() {
      this.trigger?.removeEventListener("click", () => {
        this.dialog?.showModal();
      });
    }
  }

  customElements.define("enhanced-dialog", EnhancedDialog);
</script>

<style>
  .modal {
    display: flex;
    position: fixed;
    flex-direction: column;
    gap: var(--spacing-md);
    transform: scale(0);
    opacity: 0;
    transition:
      opacity 0.15s ease-out,
      transform 0.15s ease-out,
      overlay 0.15s ease-out allow-discrete,
      display 0.15s ease-out allow-discrete;
    margin: auto;
    inset: 0;
    border: 1px solid oklch(0.269 0.042 263);
    background: oklch(0.269 0.042 263);
    padding: var(--spacing-lg);
    width: 100%;
    max-inline-size: 600px;
  }

  .modal:open {
    transform: scale(1);
    opacity: 1;
  }

  @starting-style {
    .modal:open {
      transform: scale(0);
      opacity: 0;
    }
  }

  .modal::backdrop {
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    transition:
      display 0.15s allow-discrete,
      overlay 0.15s allow-discrete,
      background-color 0.15s;
    background: rgba(0, 0, 0, 0.6);
  }

  @starting-style {
    .modal:open::backdrop {
      background: transparent;
    }
  }

  .modal__header {
    display: flex;
    justify-content: space-between;
  }

  .modal__body {
  }
</style>
